@import "mixins";
@import "variables";

/* TODO
  Create all padding and margin classes dynamically without repeating code. 
  Create margin and padding maps, create breakpoints map. 
  Then for each breakpoint, for each margin and padding side (top, right, bottom, left), for each spacing value, create a class.
  Try having the mixins for the padding and margin as the values of the margin and padding maps.
*/
$margin-values: (
  ml: marginLeft,
);

// Generate classes dynamically
@each $key, $value in $spacing-values {
  // Paddings
  .p-#{$key} {
    @include padding($value);
  }

  .pt-#{$key} {
    @include paddingTop($value);
  }

  .pr-#{$key} {
    @include paddingRight($value);
  }

  .pb-#{$key} {
    @include paddingBottom($value);
  }

  .pl-#{$key} {
    @include paddingLeft($value);
  }

  .plr-#{$key} {
    @include paddingHorizontal($value);
  }

  .ptb-#{$key} {
    @include paddingVertical($value);
  }

  // Margins
  .m-#{$key} {
    @include margin($value);
  }

  .mt-#{$key} {
    @include marginTop($value);
  }

  .mr-#{$key} {
    @include marginRight($value);
  }

  .mb-#{$key} {
    @include marginBottom($value);
  }

  .ml-#{$key} {
    @include marginLeft($value);
  }

  .mlr-#{$key} {
    @include marginHorizontal($value);
  }

  .mtb-#{$key} {
    @include marginVertical($value);
  }
  .mlr-#{key} {
    @include marginHorizontal($value);
  }

  // Radius
  .radius-#{$key} {
    border-radius: $value;
  }
}

@media (min-width: $smMin) {
  @each $key, $value in $spacing-values {
    // Paddings

    .p-sm-#{$key} {
      @include padding($value);
    }

    .plr-sm-#{$key} {
      @include paddingHorizontal($value);
    }

    // Margins
    .mlr-sm-#{$key} {
      @include marginHorizontal($value);
    }
  }
}
